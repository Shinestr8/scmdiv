{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","page_background","concat","process","Math","floor","random","App","_useState","useState","_useState2","slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","cupge","setCupge","loadingMessages","useEffect","_fetchData","asyncToGenerator","_callee","response","_context","fetch","json","competitions","t0","apply","arguments","fetchData","includes","document","title","players","react_default","a","createElement","className","style","backgroundImage","backgroundRepeat","Fragment","alt","src","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9a6f11de.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst page_background = `${process.env.PUBLIC_URL}/${Math.floor(\r\n  Math.random() * 25\r\n)}.webp`;\r\n\r\nfunction App() {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [cupge, setCupge] = useState(null);\r\n\r\n  const loadingMessages = [\r\n    \"Processing the scam...\",\r\n    \"Dingsing the dongs...\",\r\n    \"Keoso the silver 3 KEKL...\",\r\n    \"AT Medal could be a bit more challenging...\",\r\n    \"mhm?\",\r\n    \"Checking scam...\",\r\n    \"Feel free to give me inspiration for some loading message Shkofus\",\r\n    \"Scamfus ?\",\r\n    \"Loading message edit 9...\",\r\n    \"Support me on paypal or rito\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      try {\r\n        let response = await fetch(\r\n          \"https://polite-conkies-75f54b.netlify.app/.netlify/functions/api/currentcup\"\r\n        );\r\n        response = await response.json();\r\n\r\n        setData(response.competitions);\r\n      } catch (error) {}\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      for (let i = 0; i < data.length; ++i) {\r\n        if (data[i].name.includes(\"#1\")) {\r\n          setCupge(data[i]);\r\n          document.title = `div ${\r\n            Math.floor((data[i].players * 0.1) / 64) + 1\r\n          } pepepoint`;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div\r\n      className=\"app\"\r\n      style={{\r\n        backgroundImage: `url(${page_background})`,\r\n        backgroundRepeat: \"repeat-x repeat-y\",\r\n      }}\r\n    >\r\n      <div className=\"wrapper\">\r\n        {loading && (\r\n          <>\r\n            <div>\r\n              {\r\n                loadingMessages[\r\n                  Math.floor(Math.random() * loadingMessages.length)\r\n                ]\r\n              }\r\n            </div>\r\n            <img\r\n              className=\"cogger\"\r\n              alt=\"cogger\"\r\n              src={process.env.PUBLIC_URL + \"/cogger.webp\"}\r\n            />\r\n          </>\r\n        )}\r\n        {data && cupge ? (\r\n          <>\r\n            <h1>{cupge.name}</h1>\r\n            <p>Player count: {cupge.players}</p>\r\n            <p>\r\n              Highest pos for type 2:{\" \"}\r\n              <strong>\r\n                {Math.floor((cupge.players * 0.1) / 64) * 64} (div{\" \"}\r\n                {Math.floor((cupge.players * 0.1) / 64)})\r\n              </strong>\r\n            </p>\r\n            <p>\r\n              Highest pos for type 3:{\" \"}\r\n              <strong>\r\n                {Math.floor((cupge.players * 0.25) / 64) * 64} (div{\" \"}\r\n                {Math.floor((cupge.players * 0.25) / 64)})\r\n              </strong>\r\n            </p>\r\n            <p>\r\n              div {Math.floor((cupge.players * 0.1) / 64) + 1} players{\" \"}\r\n              <img\r\n                className=\"pepepoint\"\r\n                alt=\"pepepoint\"\r\n                src={process.env.PUBLIC_URL + \"/25.webp\"}\r\n              />\r\n            </p>\r\n          </>\r\n        ) : (\r\n          <div>Eh mhm?</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}